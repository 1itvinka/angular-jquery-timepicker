angular.module("ui.timepicker",[]).value("uiTimepickerConfig",{step:15}).directive("uiTimepicker",["uiTimepickerConfig","$parse",function(a,b){var c=function(a){return void 0!==moment&&moment.isMoment(a)&&a.isValid()},d=function(a){return angular.isDefined(a)&&null!==a&&(angular.isDate(a)||c(a))};return{restrict:"A",require:"ngModel",scope:{ngModel:"=",baseDate:"="},priority:1,link:function(e,f,g,h){"use strict";var i=angular.copy(a),j=i.asMoment||!1;delete i.asMoment,h.$render=function(){var a=h.$modelValue;if(angular.isDefined(a)&&null!==a&&!d(a))throw new Error("ng-Model value must be a Date or Moment object - currently it is a "+typeof a+".");c(a)&&(a=a.toDate()),f.is(":focus")||f.timepicker("setTime",a)},e.$watch(g.ngModel,function(){h.$render()},!0),i.appendTo=f.parent(),f.timepicker(angular.extend(i,g.uiTimepicker?b(g.uiTimepicker)(e):{}));var k=function(){var a=h.$modelValue?h.$modelValue:e.baseDate;return c(a)?a.toDate():a},l=function(a){return j?moment(a):a};f.is("input")?h.$parsers.unshift(function(){var a=f.timepicker("getTime",k());return h.$setValidity("time",null!==a),l(a)}):f.on("changeTime",function(){e.$evalAsync(function(){var a=f.timepicker("getTime",k());h.$setViewValue(a)})})}}}]);